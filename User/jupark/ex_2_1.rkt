#lang racket

(define (절대값 x)
  (if (< x 0)
      (- x)
      x))

(define (최대공약수 a b)
  (if (= b 0)
      a
      (최대공약수 b (remainder a b))))

(define (분자값 x) (car x))
(define (분모값 x) (cdr x))

(define (예외_고려하지_않은_유리수 분자 분모)
  (let ((최대공약수값 (최대공약수 (절대값 분자) (절대값 분모)))
        (부호 (if (< (* 분자 분모) 0) -1 1)))
    (cons (* 부호 (/ (절대값 분자) 최대공약수값)) (/ (절대값 분모) 최대공약수값))))

(define (유리수 분자 분모)
  (if (= 분모 0)
      (cons 0 0)
      (if (= 분자 0)
          (cons 0 1)
          (예외_고려하지_않은_유리수 분자 분모))))

(define (예외_없는_출력 x)
  (display (분자값 x))
  (cond ((not (= (분모값 x) 1))
         (display "/")        
         (display (분모값 x)))))

(define (출력 x)
  (newline)
  (if (= (분모값 x) 0)
      (display "분모값이 0 이다.")
      (예외_없는_출력 x)))

(출력 (유리수 1 0))
(출력 (유리수 0 1))
(출력 (유리수 0 0))
(출력 (유리수 1 2))
(출력 (유리수 -1 2))
(출력 (유리수 1 -2))
(출력 (유리수 -1 -2))
(출력 (유리수 1 1))
           